openapi: 3.0.0
info:
  title: VibeTravels API - Travel Notes
  version: 1.0.0
  description: API endpoints for managing travel notes in VibeTravels application

servers:
  - url: /api
    description: API base URL

components:
  schemas:
    TravelNoteDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the travel note
        userId:
          type: string
          format: uuid
          description: ID of the note owner
        name:
          type: string
          description: Title of the travel note
        description:
          type: string
          description: Detailed description of the travel note
        isPublic:
          type: boolean
          description: Whether the note is publicly visible
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
        attractions:
          type: array
          items:
            $ref: '#/components/schemas/AttractionDTO'
          description: List of attractions in this travel note
    
    AttractionDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
        image:
          type: object
          nullable: true
          properties:
            url:
              type: string
            photographer:
              type: string
            photographerUrl:
              type: string
            source:
              type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: object
          description: Additional error details (e.g., validation errors)

paths:
  /travel-notes:
    get:
      summary: List travel notes
      description: |
        Retrieves a paginated list of travel notes. Returns both public notes and the authenticated user's private notes.
        Supports filtering by search term and public status.
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
          description: Number of items per page
        - name: search
          in: query
          schema:
            type: string
          description: Search term to filter notes by name or description
        - name: isPublic
          in: query
          schema:
            type: boolean
          description: Filter notes by public status
        - name: includeAttractions
          in: query
          schema:
            type: boolean
            default: true
          description: Whether to include attractions in the response
      responses:
        '200':
          description: Successfully retrieved travel notes
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/TravelNoteDTO'
                  total:
                    type: integer
                    description: Total number of matching notes
                  page:
                    type: integer
                    description: Current page number
                  limit:
                    type: integer
                    description: Number of items per page
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - supabaseAuth: []

  security:
    - supabaseAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
        description: Supabase JWT token 